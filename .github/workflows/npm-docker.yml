name: NPM Docker Container Creation


name: React site build

on:
  push:
    branches: [ master, develop ]
  pull_request:
      branches: [ master ]
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

# on:
#   push:
#     branches: [ master,develop ]
#   pull_request:
#       branches: [ master, develop ]  

# jobs:
#   main:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Preparation
#       id: prep
#       run: |
#         REGISTRY="ghcr.io"
#         IMAGE="${REGISTRY}/${{ github.repository }}/${{ github.event.repository.name }}"
#         TAGS="${IMAGE}:latest"
#         if [[ $GITHUB_REF == ref/head/master ]]; then
#           TAGS="${TAGS},${IMAGE}:latest"
#         fi
#         echo ::set-output name=tags::${TAGS}
#     # - name: Set up Docker Buildx
#     #   uses: docker/setup-buildx-action@v1
#     - name: Build, tag, and push image to Github
#       env:
#         GITHUB_REGISTRY: ${{ steps.prep.outputs.REGISTRY }}
#         GIT_IMAGE: ${{ steps.prep.outputs.image }}
#         TAG: latest
#       run: |
#         docker build -t ghcr.io/terryyoung22/reactapp:latest ReactApp/ && echo ${{ secrets.githubDockerToken}} | docker login ghcr.io -u terryyoung22 --password-stdin && docker push ghcr.io/terryyoung22/reactapp:latest
# # use this tag for when docker.pkg is deprecated: ghcr.io


#     ##############docker hub push##################

#     # - name: Docker login
#     #   run: docker login -u ${{ secrets.DockerHubUser }} -p ${{ secrets.DockerHubToken }}

#     # - name: Docker build and push React app
#     #   run: docker build -f ${GITHUB_WORKSPACE}/ReactApp/Dockerfile -t ${{ secrets.DockerHubUser }}/${IMAGE_NAME}:latest . && docker push ${{ secrets.DockerHubUser }}/${IMAGE_NAME}:latest
#     #   env:
#     #     IMAGE_NAME: react
